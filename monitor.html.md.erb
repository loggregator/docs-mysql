---
title: Monitoring and KPIs for VMware Tanzu SQL with MySQL for VMs
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes how to monitor the health of the <%= vars.product_full %> service
using logs, metrics, and Key Performance Indicators
(KPIs) generated by <%= vars.product_short %> component VMs.

For more information about logging and metrics in <%= vars.app_runtime_full %>, see
[Overview of Logging and Metrics](https://docs.pivotal.io/application-service/loggregator/data-sources.html).

## <a id="metrics"></a>About Metrics

Metrics are regularly-generated log entries that report measured component states.
The default metrics polling interval is 30 seconds for MySQL instances. For the service broker, the default is 60 seconds.

You can configure the MySQL instance interval in **Configure Monitoring**
in the <%= vars.product_short %> tile. For more information, see [Configure Monitoring](./install-config.html#monitoring).

Metrics are long, single lines of text with the format:

```
origin:"p.mysql" eventType:ValueMetric timestamp:1496776477930669688 deployment:"service-instance_2b5a001f-2bf3-460c-aee6-fd2253f9fb0c" job:"mysql" index:"b09df494-b731-4d06-a4b0-c2985ceedf4c" ip:"10.0.8.4" valueMetric:<name:"/p.mysql/performance/open_files" value:24 unit:"file" >
```

## <a id="access"></a>Access MySQL Metrics

To access MySQL metrics:

+ [Use the Indicator Protocol Dashboard](#indicator). This method requires Healthwatch v1.x.
+ [Use Grafana](#grafana). This method requires Healthwatch v2.x.
+ [Use Log Cache](#log-cache)

###  <a id="grafana"></a>Use Grafana

You can use Grafana to visually view metrics for <%= vars.product_short %> service instances. 

<p class='note'><strong>Note:</strong> This section requires Healthwatch v2.x.</p>

1. Install the Healthwatch tile in <%= vars.ops_manager %>. For information about installing Healthwatch, see the [Healthwatch for VMware Tanzu documentation](https://docs.pivotal.io/healthwatch/2-2/installing/installing-manually.html).
2. View the Grafana dashboard by navigating to:

    ```
    https://grafana.YOUR-SYSTEM-DOMAIN
    ```

For more information about using Grafana dashboards, see the [Healthwatch for VMware Tanzu documentation](https://docs.pivotal.io/healthwatch/2-2/using-grafana.html).

###  <a id="indicator"></a>Use the Indicator Protocol Dashboard

<p class='note'><strong>Note:</strong> This section requires Healthwatch v1.x.</p>

You can use the Indicator Protocol dashboard to view Key Performance Indicators (KPIs)
for <%= vars.product_short %> service instances. The dashboard includes a graphical representation of the KPIs and information about recommended alert thresholds.
For more information about the Indicator Protocol dashboard, see [Indicator Protocol Dashboard
(Beta)](https://docs.pivotal.io/platform/healthwatch/indicator-protocol.html).
For information about <%= vars.product_short %> KPIs, see [KPIs for MySQL Service Instances](#kpi) below.

To access KPIs using the Indicator Protocol dashboard:

1. Install the Healthwatch tile in <%= vars.ops_manager %>. See [Installing
and Configuring Healthwatch](https://docs.pivotal.io/platform/healthwatch/installing.html).
1. Enable the Indicator Protocol add-on in <%= vars.ops_manager %>. See [Enable the Indicator Protocol
Add-on](https://docs.pivotal.io/platform/healthwatch/indicator-protocol.html#enable-add-on).
1. View the Indicator Protocol Dashboard by navigating to:

    ```
    https://healthwatch.YOUR-SYSTEM-DOMAIN/indicator-dashboards
    ```

The following image shows an example of the Indicator Protocol dashboard for a highly available
(HA) cluster service instance:

![This screenshot shows KPIs metrics for MySQL server availability, the percentage of available connections,
CPU utilization percentage, queries delta, ephemeral disk percent, and persistent disk percent. The value of the
metrics are shown as graphs over time.](images/indicator-dash.png)

<a href="./images/indicator-dash.png" target="_blank" aria-hidden="true">View a larger version of this image</a>

<!-- The below partial is in https://github.com/pivotal-cf/docs-partials -->
### <a id="log-cache"></a>Use Log Cache
<%= partial vars.path_to_partials + '/services/log-cache-cli-plugin',
:locals => {:service_name => vars.product_short} %>


## <a id="kpi"></a>KPIs for MySQL Service Instances

KPIs are metrics for MySQL service instances that you can monitor for two purposes:

- To ensure high performance.

- To discover emerging issues.

KPIs can be either raw component metrics or derived metrics generated by applying formulas to raw metrics.

VMware provides the following KPIs as general alerting and response guidance
for typical <%= vars.product_short %> installations.
VMware recommends that you alter the alert measures by observing historical trends.
You can also create your KPIs that are specific to your environment using the available component metrics.

For a list of all the <%= vars.product_short %> component metrics, see [Component Metrics](#component-metrics) below.

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/all-kpis' %>

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/2-9-and-later-kpis' %>

## <a id="component-metrics"></a>Component Metrics

In addition to the above KPIs, the MySQL service emits the followings metrics for monitoring and alerting:

  + [MySQL Metrics](#mysql-metrics)
  + [Disk Metrics](#disk-metrics)
  + [Leader-Follower Metrics](#l-f-metrics)
  + [Highly Available Cluster Metrics](#ha-metrics)

### <a id="mysql-metrics"></a>MySQL Metrics

The metrics that all <%= vars.product_short %> service instances emit:

<table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="available-metrics"></a>/p.mysql/available</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>Indicates if the local database server is available and responding. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>boolean</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="max-connections"></a>/p.mysql/variables/max_connections</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The maximum permitted number of simultaneous client connections. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="open-files-limit"></a>/p.mysql/variables/open_files_limit</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of files that the operating system permits mysqld to open. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>files</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="read-only"></a>/p.mysql/variables/read_only</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>Whether the server is in read-only mode </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>boolean</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="questions-metrics"></a>/p.mysql/performance/questions</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of statements executed by the server since the server started or the last <code>FLUSH STATUS</code>. This includes only statements sent to the server by clients and not statements executed within stored programs, unlike the <code>queries</code> variable.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="queries"></a>/p.mysql/performance/queries</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of statements executed by the server, excluding <code>COM&#95;PING</code> and <code>COM&#95;STATISTICS</code>. Differs from <code>questions</code> in that it also counts statements executed within stored programs. Not affected by <code>FLUSH STATUS</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="queries-delta"></a>/p.mysql/performance/queries_delta</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The change in the <code>/performance/queries</code> metric since the last time it was emitted.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>integer greater than or equal to zero</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="buffer-pool-free"></a>/p.mysql/innodb/buffer_pool_pages_free</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The amount of free space, measured in pages, in the InnoDB Buffer Pool. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="buffer-pool-total"></a>/p.mysql/innodb/buffer_pool_pages_total</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The total amount of free space, measured in pages, in the InnoDB Buffer Pool containing data. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="buffer-pool-data"></a>/p.mysql/innodb/buffer_pool_pages_data</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of pages in the InnoDB Buffer Pool containing data. The number includes both dirty and clean pages. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="row-current-wait"></a>/p.mysql/innodb/row_lock_current_waits</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of row locks currently being waited for by operations on InnoDB tables. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="data-read"></a>/p.mysql/innodb/data_read</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The amount of data read since the server started. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>bytes</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="data-written"></a>/p.mysql/innodb/data_written</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The amount of data written since the server started. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>bytes</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="os-waits"></a>/p.mysql/innodb/mutex_os_waits</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of mutex OS waits. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>events/second</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="spin-rounds"></a>/p.mysql/innodb/mutex_spin_rounds</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of mutex spin rounds. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>events/second</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="spin-waits"></a>/p.mysql/innodb/mutex_spin_waits</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of mutex spin waits. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>events/second</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="log-fsyncs"></a>/p.mysql/innodb/os_log_fsyncs</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of fsync() writes done to the InnoDB redo log files. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="row-time"></a>/p.mysql/innodb/row_lock_time</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>Total time spent in acquiring row locks. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>milliseconds</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="row-wait"></a>/p.mysql/innodb/row_lock_waits</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of times a row lock had to be waited for since the server started. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="connections-metrics"></a>/p.mysql/net/connections</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of connection attempts to the server, both successful and unsuccessful, to the MySQL server. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="used-connections"></a>/p.mysql/net/max_used_connections</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The maximum number of connections that have been in use simultaneously since the server started. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-delete"></a>/p.mysql/performance/com_delete</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of delete commands since the server started or the last <code>FLUSH STATUS</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-delete-multi"></a>/p.mysql/performance/com_delete_multi</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of delete-multi commands since the server started or the last <code>FLUSH STATUS</code>. Applies to DELETE statements that use multiple-table syntax.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-insert"></a>/p.mysql/performance/com_insert</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of insert commands since the server started or the last <code>FLUSH STATUS</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-insert-select"></a>/p.mysql/performance/com_insert_select</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of insert-select commands since the server started or the last <code>FLUSH STATUS</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-replace"></a>/p.mysql/performance/com_replace_select</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of replace-select commands since the server started or the last <code>FLUSH STATUS</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-select"></a>/p.mysql/performance/com_select</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of select commands since the server started or the last <code>FLUSH STATUS</code>. If a query result is returned from query cache, the server increments the <code>qcache&#95;hits</code> status variable, not <code>com&#95;select</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-update"></a>/p.mysql/performance/com_update</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of update commands since the server started or the last <code>FLUSH STATUS</code>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="com-update-multi"></a>/p.mysql/performance/com_update_multi</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of update-multi commands since the server started or the last <code>FLUSH STATUS</code>. Applies to UPDATE statements that use multiple-table syntax.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="tmp-tables"></a>/p.mysql/performance/created_tmp_disk_tables</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of internal on-disk temporary tables created by the server while executing statements. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="tmp-files"></a>/p.mysql/performance/created_tmp_files</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of temporary files created by mysqld. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="created-tables"></a>/p.mysql/performance/created_tmp_tables</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of internal temporary tables created by the server while executing statements. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="cpu-util-per"></a>/p.mysql/performance/cpu_utilization_percent</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The percent of the CPU in use by all processes on the MySQL node. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>percent</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="open-files"></a>/p.mysql/performance/open_files</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of regular files currently open, which were opened by the server. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="open-tables"></a>/p.mysql/performance/open_tables</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of tables that are currently open. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="opened-tables"></a>/p.mysql/performance/opened_tables</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of tables that have been opened. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="table-def"></a>/p.mysql/performance/open_table_definitions</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of currently cached table definitions or <code>.frm</code> files.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="opened-def"></a>/p.mysql/performance/opened_table_definitions</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of <code>.frm</code> files that have been cached.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="qcache-hits"></a>/p.mysql/performance/qcache_hits</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of query cache hits. The query cache and qcache_hits metric is deprecated as of MySQL v5.7.20. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="slow-queries"></a>/p.mysql/performance/slow_queries</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of queries that have taken more than <code>long&#95;query&#95;time</code> seconds.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="locks-waited"></a>/p.mysql/performance/table_locks_waited</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The total number of times that a request for a table lock could not be granted immediately and a wait was needed. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="threads-connected"></a>/p.mysql/performance/threads_connected</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of currently open connections. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="threads-run"></a>/p.mysql/performance/threads_running</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of threads that are not sleeping. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="rpl-wait-time"></a>/p.mysql/rpl_semi_sync_master_tx_avg_wait_time</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The average time the leader has waited for the follower to accept transactions. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>microseconds</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="rpl-no-tax"></a>/p.mysql/rpl_semi_sync_master_no_tx</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The number of transactions committed without follower acknowledgement. </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>
  <table class="nice">
  <tr>
  <th colspan="2" style="text-align: center;"><a name="rpl-wait-sessions"></a>/p.mysql/rpl_semi_sync_master_wait_sessions</th>
  </tr>
  <tr>
    <th width="20%">Description</th>
    <td>The current number of connections waiting for a sync commit. For more information about sync replication, see <a href="./change-default.html#synchronous-replication">About Synchronous Replication</a>.
 </td>
  </tr>
  <tr>
    <th width="15%">Unit</th>
    <td>count</td>
  </tr>
</table>

### <a id="disk-metrics"></a>Disk Metrics

The disk usage metrics that all <%= vars.product_short %> services emit:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/disk-metrics' %>

### <a id="l-f-metrics"></a>Leader-Follower Metrics

The metrics that leader-follower VMs emit:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/l-f-metrics' %>

### <a id="ha-metrics"></a>Highly Available Cluster Metrics

The metrics that HA clusters emit:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/ha-metrics' %>
